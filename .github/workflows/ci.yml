name: CI
on:
  pull_request:
    branches:
      - main

env:
  PORT: 3000
  CYPRESS_HOST_PORT: 3001
  CYPRESS_BASE_URL_PREFIX: http://localhost:3000
  VITE_AWS_COGNITO_REGION: ${{ secrets.VITE_AWS_COGNITO_REGION }}
  VITE_AWS_COGNITO_USER_POOL_ID: ${{ secrets.VITE_AWS_COGNITO_USER_POOL_ID }}
  VITE_AWS_COGNITO_CLIENT_ID: ${{ secrets.VITE_AWS_COGNITO_CLIENT_ID }}
  VITE_AWS_COGNITO_ENDPOINT: ${{ secrets.VITE_AWS_COGNITO_ENDPOINT }}
  VITE_AWS_COGNITO_E2E_USERNAME: ${{ secrets.VITE_AWS_COGNITO_E2E_USERNAME }}
  VITE_AWS_COGNITO_E2E_PASSWORD: ${{ secrets.VITE_AWS_COGNITO_E2E_PASSWORD }}
  VITE_URL_API_BASE: http://localhost:3002/api

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

      - name: Run build
        run: npm run build

  test:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: npm run test

  sonarqube-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: coverage
          path: coverage

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
