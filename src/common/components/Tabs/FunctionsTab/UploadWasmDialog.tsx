import { Fragment } from 'react';

import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from '../../ui/dialog';
import type { FileData } from './DragAndDropContainer';
import EphemeralContent from './EphemeralContent';
import NonEphemeralContent from './NonEphemeralContent';

import { Invocation } from '@/common/types/invocation';
import OverlayLoading from '@/common/views/OverlayLoading';
import { IWalletContent } from '@/modules/auth/interfaces/IAuthenticationContext';

interface UploadWasmDialogProps {
  open: boolean;
  onOpenChange: () => void;
  data: Invocation;
  wallet: IWalletContent | null;
  loading: boolean;
  files: FileData[];
  uploadFiles: (files: FileData[]) => void;
  deleteFile: (indexFile: number) => void;
  error: string | null;
  handleButtonClick: () => void;
  signedTransactionXDR: string | null;
  status: {
    status: string;
    taskArn: string;
    publicIp: string;
    isEphemeral: boolean;
  };
  setEphemeral: (status: boolean) => void;
  handleStart: ({ interval }: { interval: number }) => Promise<void>;
  handleStop: () => Promise<void>;
  // setIsEphemeral: React.Dispatch<React.SetStateAction<boolean>>;
  // network: NETWORK;
  // isLoading: boolean;
  // status: any | undefined;
  // resetState: () => void;
}

function UploadWasmDialog({
  open,
  onOpenChange,
  data,
  wallet,
  loading,
  files,
  uploadFiles,
  deleteFile,
  error,
  handleButtonClick,
  signedTransactionXDR,
  status,
  setEphemeral,
  handleStop,
  handleStart,
}: // resetState,
// setIsEphemeral,
// isLoading,

// isEphemeral,
Readonly<UploadWasmDialogProps>) {
  let buttonLabel = 'Load';
  if (!signedTransactionXDR && !wallet?.autoGenerated) {
    buttonLabel = 'Prepare';
  }

  return (
    <Fragment>
      {loading ? (
        <OverlayLoading />
      ) : (
        <Dialog open={open} onOpenChange={onOpenChange}>
          <DialogContent
            data-test="import-account-modal-container"
            className="min-w-fit"
          >
            <DialogHeader>
              <DialogTitle
                data-test="import-account-modal-title"
                className="text-lg select-none"
              >
                {status.isEphemeral ? 'Ephemeral Network' : 'Upload Wasm File'}
              </DialogTitle>
              <DialogDescription
                data-test="import-account-modal-description"
                className="text-sm select-none"
              >
                {status.isEphemeral
                  ? 'You are using an ephemeral network. Ensure that your transactions can be completed without persistent state.'
                  : 'Please upload the WASM file of the contract'}
              </DialogDescription>
            </DialogHeader>
            {!status.isEphemeral ? (
              <NonEphemeralContent
                data={data}
                files={files}
                uploadFiles={uploadFiles}
                deleteFile={deleteFile}
                error={error}
                setEphemeral={setEphemeral}
                handleButtonClick={handleButtonClick}
                buttonLabel={buttonLabel}
                onOpenChange={onOpenChange}
              />
            ) : (
              <EphemeralContent
                files={files}
                uploadFiles={uploadFiles}
                deleteFile={deleteFile}
                error={error}
                status={status}
                loading={loading}
                handleStart={handleStart}
                handleStop={handleStop}
                handleButtonClick={handleButtonClick}
                buttonLabel={buttonLabel}
                setEphemeral={setEphemeral}
              />
            )}
          </DialogContent>
        </Dialog>
      )}
    </Fragment>
  );
}

export default UploadWasmDialog;
