import { IStatusState } from './IStatusState';

import { NETWORK } from '@/common/types/soroban.enum';
import { WalletType } from '@/modules/signer-api/constants/enums';

export interface IAuthenticationContext {
	handleResetPassword: (
		email: string,
		newPassword: string,
		code: string,
	) => Promise<void>;
	handleSignIn: (email: string, password: string) => Promise<void>;
	handleSignUp: (email: string, password: string) => Promise<void>;
	handleForgotPassword: (email: string) => Promise<void>;
	handleRefreshSession: () => Promise<void>;
	handleSignOut: () => void;
	statusState: IStatusState;
	connectWallet(network: Partial<NETWORK>): Promise<void>;
	disconnectWallet(network?: Partial<NETWORK>): void;
	onCreateAccount(showToast?: boolean): void;
	handleChangePassword: (
		oldPassword: string,
		newPassword: string,
	) => Promise<void>;
	wallet: IWallet;
}

export interface IWallet {
	[NETWORK.SOROBAN_MAINNET]: IWalletContent | null;
	[NETWORK.SOROBAN_TESTNET]: IWalletContent | null;
	[NETWORK.SOROBAN_FUTURENET]: IWalletContent | null;
}

export interface IWalletContent {
	type: WalletType | '';
	network: NETWORK;
	privateKey?: string;
	autoGenerated?: boolean;
	publicKey: string;
	email: string | null;
}
